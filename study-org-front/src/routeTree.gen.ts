/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login/route'
import { Route as ContentsRouteImport } from './routes/_contents/route'
import { Route as IndexImport } from './routes/index'
import { Route as ContentsAAAARouteImport } from './routes/_contents/AAAA/route'

// Create/Update Routes

const LoginRouteRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ContentsRouteRoute = ContentsRouteImport.update({
  id: '/_contents',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ContentsAAAARouteRoute = ContentsAAAARouteImport.update({
  id: '/AAAA',
  path: '/AAAA',
  getParentRoute: () => ContentsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_contents': {
      id: '/_contents'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContentsRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/_contents/AAAA': {
      id: '/_contents/AAAA'
      path: '/AAAA'
      fullPath: '/AAAA'
      preLoaderRoute: typeof ContentsAAAARouteImport
      parentRoute: typeof ContentsRouteImport
    }
  }
}

// Create and export the route tree

interface ContentsRouteRouteChildren {
  ContentsAAAARouteRoute: typeof ContentsAAAARouteRoute
}

const ContentsRouteRouteChildren: ContentsRouteRouteChildren = {
  ContentsAAAARouteRoute: ContentsAAAARouteRoute,
}

const ContentsRouteRouteWithChildren = ContentsRouteRoute._addFileChildren(
  ContentsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ContentsRouteRouteWithChildren
  '/login': typeof LoginRouteRoute
  '/AAAA': typeof ContentsAAAARouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ContentsRouteRouteWithChildren
  '/login': typeof LoginRouteRoute
  '/AAAA': typeof ContentsAAAARouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_contents': typeof ContentsRouteRouteWithChildren
  '/login': typeof LoginRouteRoute
  '/_contents/AAAA': typeof ContentsAAAARouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/AAAA'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/AAAA'
  id: '__root__' | '/' | '/_contents' | '/login' | '/_contents/AAAA'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContentsRouteRoute: typeof ContentsRouteRouteWithChildren
  LoginRouteRoute: typeof LoginRouteRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContentsRouteRoute: ContentsRouteRouteWithChildren,
  LoginRouteRoute: LoginRouteRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_contents",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_contents": {
      "filePath": "_contents/route.tsx",
      "children": [
        "/_contents/AAAA"
      ]
    },
    "/login": {
      "filePath": "login/route.tsx"
    },
    "/_contents/AAAA": {
      "filePath": "_contents/AAAA/route.tsx",
      "parent": "/_contents"
    }
  }
}
ROUTE_MANIFEST_END */
