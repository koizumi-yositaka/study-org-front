/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as LoginRouteImport } from './routes/login/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthUsersRouteImport } from './routes/_auth/users/route'
import { Route as AuthSettingsRouteImport } from './routes/_auth/settings/route'
import { Route as AuthHomeRouteImport } from './routes/_auth/home/route'
import { Route as AuthCCCCRouteImport } from './routes/_auth/CCCC/route'
import { Route as AuthBBBBRouteImport } from './routes/_auth/BBBB/route'
import { Route as AuthMeetingsIndexImport } from './routes/_auth/meetings/index'
import { Route as AuthMeetingsMeetingIdImport } from './routes/_auth/meetings/$meetingId'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthUsersRouteRoute = AuthUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSettingsRouteRoute = AuthSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthHomeRouteRoute = AuthHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCCCCRouteRoute = AuthCCCCRouteImport.update({
  id: '/CCCC',
  path: '/CCCC',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBBBBRouteRoute = AuthBBBBRouteImport.update({
  id: '/BBBB',
  path: '/BBBB',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMeetingsIndexRoute = AuthMeetingsIndexImport.update({
  id: '/meetings/',
  path: '/meetings/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/meetings/index.lazy').then((d) => d.Route),
)

const AuthMeetingsMeetingIdRoute = AuthMeetingsMeetingIdImport.update({
  id: '/meetings/$meetingId',
  path: '/meetings/$meetingId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/BBBB': {
      id: '/_auth/BBBB'
      path: '/BBBB'
      fullPath: '/BBBB'
      preLoaderRoute: typeof AuthBBBBRouteImport
      parentRoute: typeof AuthImport
    }
    '/_auth/CCCC': {
      id: '/_auth/CCCC'
      path: '/CCCC'
      fullPath: '/CCCC'
      preLoaderRoute: typeof AuthCCCCRouteImport
      parentRoute: typeof AuthImport
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeRouteImport
      parentRoute: typeof AuthImport
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsRouteImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users': {
      id: '/_auth/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersRouteImport
      parentRoute: typeof AuthImport
    }
    '/_auth/meetings/$meetingId': {
      id: '/_auth/meetings/$meetingId'
      path: '/meetings/$meetingId'
      fullPath: '/meetings/$meetingId'
      preLoaderRoute: typeof AuthMeetingsMeetingIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/meetings/': {
      id: '/_auth/meetings/'
      path: '/meetings'
      fullPath: '/meetings'
      preLoaderRoute: typeof AuthMeetingsIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthBBBBRouteRoute: typeof AuthBBBBRouteRoute
  AuthCCCCRouteRoute: typeof AuthCCCCRouteRoute
  AuthHomeRouteRoute: typeof AuthHomeRouteRoute
  AuthSettingsRouteRoute: typeof AuthSettingsRouteRoute
  AuthUsersRouteRoute: typeof AuthUsersRouteRoute
  AuthMeetingsMeetingIdRoute: typeof AuthMeetingsMeetingIdRoute
  AuthMeetingsIndexRoute: typeof AuthMeetingsIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthBBBBRouteRoute: AuthBBBBRouteRoute,
  AuthCCCCRouteRoute: AuthCCCCRouteRoute,
  AuthHomeRouteRoute: AuthHomeRouteRoute,
  AuthSettingsRouteRoute: AuthSettingsRouteRoute,
  AuthUsersRouteRoute: AuthUsersRouteRoute,
  AuthMeetingsMeetingIdRoute: AuthMeetingsMeetingIdRoute,
  AuthMeetingsIndexRoute: AuthMeetingsIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRoute
  '': typeof AuthRouteWithChildren
  '/BBBB': typeof AuthBBBBRouteRoute
  '/CCCC': typeof AuthCCCCRouteRoute
  '/home': typeof AuthHomeRouteRoute
  '/settings': typeof AuthSettingsRouteRoute
  '/users': typeof AuthUsersRouteRoute
  '/meetings/$meetingId': typeof AuthMeetingsMeetingIdRoute
  '/meetings': typeof AuthMeetingsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRoute
  '': typeof AuthRouteWithChildren
  '/BBBB': typeof AuthBBBBRouteRoute
  '/CCCC': typeof AuthCCCCRouteRoute
  '/home': typeof AuthHomeRouteRoute
  '/settings': typeof AuthSettingsRouteRoute
  '/users': typeof AuthUsersRouteRoute
  '/meetings/$meetingId': typeof AuthMeetingsMeetingIdRoute
  '/meetings': typeof AuthMeetingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRouteRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/BBBB': typeof AuthBBBBRouteRoute
  '/_auth/CCCC': typeof AuthCCCCRouteRoute
  '/_auth/home': typeof AuthHomeRouteRoute
  '/_auth/settings': typeof AuthSettingsRouteRoute
  '/_auth/users': typeof AuthUsersRouteRoute
  '/_auth/meetings/$meetingId': typeof AuthMeetingsMeetingIdRoute
  '/_auth/meetings/': typeof AuthMeetingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | ''
    | '/BBBB'
    | '/CCCC'
    | '/home'
    | '/settings'
    | '/users'
    | '/meetings/$meetingId'
    | '/meetings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | ''
    | '/BBBB'
    | '/CCCC'
    | '/home'
    | '/settings'
    | '/users'
    | '/meetings/$meetingId'
    | '/meetings'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/_auth'
    | '/_auth/BBBB'
    | '/_auth/CCCC'
    | '/_auth/home'
    | '/_auth/settings'
    | '/_auth/users'
    | '/_auth/meetings/$meetingId'
    | '/_auth/meetings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRouteRoute: typeof LoginRouteRoute
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRouteRoute: LoginRouteRoute,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login/route.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/BBBB",
        "/_auth/CCCC",
        "/_auth/home",
        "/_auth/settings",
        "/_auth/users",
        "/_auth/meetings/$meetingId",
        "/_auth/meetings/"
      ]
    },
    "/_auth/BBBB": {
      "filePath": "_auth/BBBB/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/CCCC": {
      "filePath": "_auth/CCCC/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/home": {
      "filePath": "_auth/home/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/settings": {
      "filePath": "_auth/settings/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/users": {
      "filePath": "_auth/users/route.tsx",
      "parent": "/_auth"
    },
    "/_auth/meetings/$meetingId": {
      "filePath": "_auth/meetings/$meetingId.tsx",
      "parent": "/_auth"
    },
    "/_auth/meetings/": {
      "filePath": "_auth/meetings/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
